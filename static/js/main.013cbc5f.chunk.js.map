{"version":3,"sources":["Components/ContactList/contact-list.module.css","Components/Filter/filter.module.css","styles.module.css","redux/phonebook/slices/phonebookSlice.js","redux/phonebook/contacts-selectors.js","Components/ContactForm/ContactForm.js","redux/phonebook/slices/filterSlice.js","Components/Filter/Filter.js","Components/ContactList/ContactList.js","App.js","redux/store.js","index.js","Components/ContactForm/contact-form.module.css"],"names":["module","exports","addContact","createAsyncThunk","contact","a","axios","post","res","data","getContacts","get","deleteContact","id","delete","phonebookSlice","createSlice","name","initialState","items","loader","error","extraReducers","pending","state","action","rejected","fulfilled","payload","filter","getItems","phonebook","getFilter","value","getFilteredContacts","createSelector","toLowerCase","includes","getTotalContacts","length","Form","useState","setName","number","setNumber","contacts","useSelector","dispatch","useDispatch","resetForm","className","styles","form","onSubmit","e","preventDefault","sameContact","find","prevContact","alert","autoComplete","label","input","type","pattern","title","required","onChange","target","button","filterSlice","reducers","changeFilter","actions","Filter","filterValue","currentTarget","ContactList","filteredContacts","useEffect","list","map","item","onClick","App","totalContacts","loading","getLoader","container","color","height","width","timeout","rootReducer","phonebookReducer","filterReducer","store","configureStore","reducer","devTools","process","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.013cbc5f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"contact-list_list__1eyv8\",\"item\":\"contact-list_item__2Sjz0\",\"button\":\"contact-list_button__k2t6T\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"filter_label__rq3L4\",\"input\":\"filter_input__1dToj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"styles_container__2sCQK\"};","import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport axios from 'axios';\n\nexport const addContact = createAsyncThunk(\n  'phonebook/addContact',\n  async contact => {\n    const res = await axios.post('http://localhost:7777/contacts', contact);\n    return res.data;\n  },\n);\n\nexport const getContacts = createAsyncThunk(\n  'phonebook/getContacts',\n  async () => {\n    const res = await axios.get('http://localhost:7777/contacts');\n    return res.data;\n  },\n);\n\nexport const deleteContact = createAsyncThunk(\n  'phonebook/deleteContact',\n  async id => {\n    await axios.delete(`http://localhost:7777/contacts/${id}`);\n    return id;\n  },\n);\n\nconst phonebookSlice = createSlice({\n  name: 'phonebook',\n  initialState: {\n    items: [],\n    loader: false,\n    error: '',\n  },\n  extraReducers: {\n    [addContact.pending]: (state, action) => {\n      state.loader = true;\n    },\n    [addContact.rejected]: (state, action) => {\n      state.loader = false;\n      state.error = 'error';\n    },\n    [addContact.fulfilled]: (state, action) => {\n      state.loader = false;\n      state.error = '';\n      state.items = [...state.items, action.payload];\n    },\n\n    [getContacts.pending]: (state, action) => {\n      state.loader = true;\n    },\n    [getContacts.rejected]: (state, action) => {\n      state.loader = false;\n      state.error = 'error';\n    },\n    [getContacts.fulfilled]: (state, action) => {\n      state.loader = false;\n      state.error = '';\n      state.items = [...state.items, ...action.payload];\n    },\n\n    [deleteContact.pending]: (state, action) => {\n      state.loader = true;\n    },\n    [deleteContact.rejected]: (state, action) => {\n      state.loader = false;\n      state.error = 'error';\n    },\n    [deleteContact.fulfilled]: (state, action) => {\n      state.loader = false;\n      state.error = '';\n      state.items = state.items.filter(\n        contact => contact.id !== action.payload,\n      );\n    },\n  },\n});\n\nexport default phonebookSlice.reducer;\n","import { createSelector } from 'reselect';\n\nexport const getItems = state => state.phonebook.items;\nexport const getFilter = state => state.filter.value;\nexport const getLoader = state => state.phonebook.loader;\n\nexport const getFilteredContacts = createSelector(\n  [getItems, getFilter],\n  (items, value) =>\n    items.filter(contact =>\n      contact.name.toLowerCase().includes(value.toLowerCase()),\n    ),\n);\n\nexport const getTotalContacts = createSelector(\n  [getItems],\n  items => items.length,\n);\n","import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport styles from './contact-form.module.css';\nimport { addContact } from '../../redux/phonebook/slices/phonebookSlice';\nimport { getItems } from '../../redux/phonebook/contacts-selectors';\n\nexport default function Form() {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const contacts = useSelector(state => getItems(state));\n  const dispatch = useDispatch();\n\n  const handleNameChange = e => {\n    setName(e.target.value);\n  };\n\n  const handleNumberChange = e => {\n    setNumber(e.target.value);\n  };\n\n  const onSubmitHandler = e => {\n    e.preventDefault();\n\n    const sameContact = contacts.find(prevContact => prevContact.name === name);\n\n    if (sameContact) {\n      resetForm();\n      alert(`${sameContact.name} is already in contacts`);\n      return;\n    }\n\n    const contact = {\n      name,\n      number,\n    };\n\n    dispatch(addContact(contact));\n    resetForm();\n  };\n\n  const resetForm = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form className={styles.form} onSubmit={onSubmitHandler} autoComplete=\"off\">\n      <label className={styles.label}>\n        Name\n        <input\n          className={styles.input}\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n          onChange={handleNameChange}\n          value={name}\n        />\n      </label>\n\n      <label className={styles.label}>\n        Number\n        <input\n          className={styles.input}\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n          onChange={handleNumberChange}\n          value={number}\n        />\n      </label>\n      <button className={styles.button} type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n}\n","import { createSlice } from '@reduxjs/toolkit';\n\nconst filterSlice = createSlice({\n  name: 'filter',\n  initialState: {\n    value: '',\n  },\n  reducers: {\n    changeFilter: (state, action) => ({\n      value: action.payload,\n    }),\n  },\n});\n\nexport const { changeFilter } = filterSlice.actions;\n\nexport default filterSlice.reducer;\n","import { useSelector, useDispatch } from 'react-redux';\nimport styles from './filter.module.css';\nimport { changeFilter } from '../../redux/phonebook/slices/filterSlice';\nimport { getFilter } from '../../redux/phonebook/contacts-selectors';\n\nexport default function Filter() {\n  const dispatch = useDispatch();\n  const filterValue = useSelector(state => getFilter(state));\n\n  return (\n    <>\n      <label className={styles.label}>\n        Find contacts by name\n        <input\n          className={styles.input}\n          type=\"text\"\n          onChange={e => dispatch(changeFilter(e.currentTarget.value))}\n          value={filterValue}\n        />\n      </label>\n    </>\n  );\n}\n","import { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport styles from './contact-list.module.css';\nimport {\n  getContacts,\n  deleteContact,\n} from '../../redux/phonebook/slices/phonebookSlice';\nimport { getFilteredContacts } from '../../redux/phonebook/contacts-selectors';\n\nconst ContactList = () => {\n  const filteredContacts = useSelector(state => getFilteredContacts(state));\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getContacts());\n  }, [dispatch]);\n\n  const onDelete = id => dispatch(deleteContact(id));\n\n  return (\n    <ul className={styles.list}>\n      {filteredContacts.map(contact => {\n        return (\n          <li className={styles.item} key={contact.id}>\n            {contact.name}: {contact.number}\n            <button\n              className={styles.button}\n              type=\"button\"\n              onClick={() => {\n                onDelete(contact.id);\n              }}\n            >\n              Delete\n            </button>\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n\nexport default ContactList;\n","import ContactForm from './Components/ContactForm/ContactForm';\nimport Filter from './Components/Filter/Filter';\nimport ContactList from './Components/ContactList/ContactList';\nimport styles from './styles.module.css';\nimport {\n  getItems,\n  getTotalContacts,\n  getLoader,\n} from './redux/phonebook/contacts-selectors';\nimport { useSelector } from 'react-redux';\nimport Loader from 'react-loader-spinner';\n\nexport default function App() {\n  const contacts = useSelector(state => getItems(state));\n  const totalContacts = useSelector(state => getTotalContacts(state));\n  const loading = useSelector(state => getLoader(state));\n\n  return (\n    <div className={styles.container}>\n      <h1>Phonebook</h1>\n      <ContactForm />\n      {contacts.length !== 0 ? (\n        <>\n          <h2>Total contacts: {totalContacts}</h2>\n          <Filter />\n        </>\n      ) : (\n        <h2>Phonebook is empty</h2>\n      )}\n      <ContactList />\n      {loading && (\n        <Loader\n          type=\"ThreeDots\"\n          color=\"#363636\"\n          height={100}\n          width={100}\n          timeout={3000}\n        />\n      )}\n    </div>\n  );\n}\n","import { configureStore } from '@reduxjs/toolkit';\nimport phonebookReducer from './phonebook/slices/phonebookSlice';\nimport filterReducer from './phonebook/slices/filterSlice';\n\nconst rootReducer = {\n  phonebook: phonebookReducer,\n  filter: filterReducer,\n};\n\nconst store = configureStore({\n  reducer: rootReducer,\n  devTools: process.env.NODE_ENV === 'development',\n});\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport store from './redux/store';\nimport { Provider } from 'react-redux';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n    ,\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"contact-form_form__Om-v1\",\"label\":\"contact-form_label__P9mKy\",\"input\":\"contact-form_input__T5HzW\",\"button\":\"contact-form_button__2ikUz\"};"],"sourceRoot":""}